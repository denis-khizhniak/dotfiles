# ===== wm independent hotkeys ===== {{{
# terminal emulator
super + Return
	urxvt

# program launcher
# super + @space
super + a
        rofi -show combi

# quit menu (dmenu)
super + x
        dmenu_shutdown

# translate word(s) menu
super + d
        dmenu_trans

# translate word(s) menu with source language specified
super + shift + d
        dmenu_trans -s

# git repositories menu
super + g
        git_jumper

# google search
super + q
        google_search

# select window
alt + Tab
        rofi -show

# suspend, reboot, shutdown
super + {alt,ctrl,alt + ctrl} + XF86Eject
        sudo systemctl {suspend,reboot,poweroff}

# take a screenshot of the screen
Print
        prtsc_screen

# take a screenshot of the active window
ctrl + Print
        prtsc_active

# take a screenshot of the active window
shift + Print
        prtsc_selected

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd
# ===== wm independent hotkeys ===== }}}
# ===== bspwm hotkeys ===== {{{
# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# rotate the nodes (split horizontally)
ctrl + alt + r
        bspc node @/ -R 90

# equalize/balance tree
ctrl + alt + {e,b}
        bspc node {@/ --equalize,--balance}

# grid layout
ctrl + alt + g
        bspwm_grid
# ===== bspwm hotkeys ===== }}}
# ===== state/flags ===== {{{ 
# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}
# ===== state/flags ===== }}}
# ===== focus/swap ===== {{{
# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window
# ===== focus/swap ===== }}}
# ===== preselect ===== {{{
# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel
# ===== preselect ===== }}}
# ===== move/resize ===== {{{
# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
# ===== move/resize ===== }}}
# ===== fn keys ===== {{{
# volume down\up
XF86Audio{LowerVolume,RaiseVolume}
        amixer_wrap -q sset Master 5%{-,+}

# mute volume
XF86AudioMute
        amixer_wrap -q set Master toggle
# ===== fn keys ===== }}}
